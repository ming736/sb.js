# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: publish stable

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      # - run: npm test
      - run: npm run build

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      
      # Publish with ts-nightly tag for 1.0.x nightly releases
      - name: Publish to ts-nightly
        if: contains(github.event.release.name, '1.0.') && contains(github.event.release.name, 'nightly')
        run: npm publish --access public --tag ts-nightly
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      
      # Publish with ts-next tag for regular 1.0.x releases
      - name: Publish to ts-next
        if: contains(github.event.release.name, '1.0.') && !contains(github.event.release.name, 'nightly')
        run: npm publish --access public --tag ts-next
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      
      # Original stable release publish
      - name: Publish to stable
        if: github.event.release.prerelease == false && !contains(github.event.release.name, '1.0.')
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      
      # Original nightly release publish
      - name: Publish to nightly
        if: github.event.release.prerelease == true && !contains(github.event.release.name, '1.0.')
        run: npm publish --access public --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}