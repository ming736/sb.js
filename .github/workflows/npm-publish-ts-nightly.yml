name: publish ts-nightly
on:
  schedule:
    - cron: '0 0 * * *'  # Runs at 00:00 UTC every day
  workflow_dispatch:      # Allows manual triggering
jobs:
  check-and-publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4=
        with:
          ref: next
          fetch-depth: 2  # Need previous commit for comparison
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - name: Calculate current hash
        id: current-hash
        run: |
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "short_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Get previous hash
        id: previous-hash
        run: |
          echo "hash=$(git rev-parse HEAD~1)" >> $GITHUB_OUTPUT
      - name: Check for changes
        id: check-changes
        run: |
          if [ "${{ steps.current-hash.outputs.hash }}" != "${{ steps.previous-hash.outputs.hash }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
      - name: Install dependencies
        if: steps.check-changes.outputs.changed == 'true'
        run: npm ci
      - name: Build
        if: steps.check-changes.outputs.changed == 'true'
        run: npm run build
      - name: Get package info
        if: steps.check-changes.outputs.changed == 'true'
        id: package
        run: |
          echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
          
      - name: Deprecate previous nightly versions
        if: steps.check-changes.outputs.changed == 'true'
        run: |
          # Get all versions of the package
          versions=$(npm view ${{ steps.package.outputs.name }} versions --json)
          
          # Loop through versions and deprecate nightlies that start with 1.
          echo "$versions" | jq -r '.[]' | while read version; do
            if [[ $version == 1.* ]] && [[ $version == *"nightly"* ]]; then
              npm deprecate "${{ steps.package.outputs.name }}@$version" "Deprecated in favor of newer nightly build" || true
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Set nightly version
        if: steps.check-changes.outputs.changed == 'true'
        run: |
          # Get current version from package.json
          current_version=$(node -p "require('./package.json').version")
          # Create nightly version with timestamp and commit hash
          nightly_version="${current_version}-nightly.$(date +'%Y%m%d')-${{ steps.current-hash.outputs.short_hash }}"
          # Update package.json with new version
          npm version $nightly_version --no-git-tag-version
      - name: Publish to NPM
        if: steps.check-changes.outputs.changed == 'true'
        run: npm publish --access public --tag ts-nightly
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
